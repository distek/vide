#!/bin/bash

projectsFile="$HOME/.config/projects/projects"

function printUsage() {
    echo "Usage:
$0 [list|select] [save|del [project name]]
    list                    list all saved projects
    select                  (fzf-select) prints full path to project directory on selection
    save [project name]     save project path as [project name]
    del                     (fzf-select) remove selected project from projects
"
    exit
}

function getProject() {
    projects=($(cat $projectsFile))

    projectName=$(for p in ${projects[@]}; do
        echo "$p" | cut -d',' -f1 
    done | fzf)

    if [ ! -z projectName ]; then
        projectDir=$(grep $projectName $projectsFile | cut -d',' -f2)
        echo "$projectName $projectDir"
    fi
}

function selectProject() {
    project=($(getProject))

    echo "${project[1]}"
}

function save() {
    echo "$1,$(pwd)" >> $projectsFile
}

function delProject() {
    projects=($(cat $projectsFile))

    projectName=$(for p in ${projects[@]}; do
        echo "$p" | awk -F',' '{print $1}'
    done | fzf)

    echo -n "" > $projectsFile

    for p in ${projects[@]}; do
        pName=$(echo $p | awk -F',' '{print $1}')
        if echo $pName | grep "^$projectName\$" >/dev/null; then
            continue 
        fi

        echo "$p" >> $projectsFile
    done
}

case $1 in
    help|--help|-h)
        printUsage
        exit 0
        ;;
    list) cat $projectsFile | tr "," " " | column -t;;
    select) selectProject;;
    save) 
        if [ "$2" = "" ]; then
            echo "Please provide a project name.
            ex: projects save project-name
            "
            exit 1
        fi

        save "$2"
        ;;
    del) delProject;;
    *)
        echo "Uknown argument: $1"
        printUsage
        exit 1
        ;;
esac
